package com.example.finalapp;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import android.content.Intent;import android.os.Bundle;import android.view.Menu;import android.view.MenuInflater;import android.view.MenuItem;import android.view.View;import android.widget.AdapterView;import android.widget.Button;import android.widget.EditText;import android.widget.ListView;import android.widget.Toast;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ValueEventListener;import java.util.ArrayList;public class UsersListActivity extends AppCompatActivity {    private boolean isUser = true;  /*  private RecyclerView mRecyclerView;    private RecyclerView.Adapter userAdapter;    private RecyclerView.LayoutManager usersLayoutManager;    private ArrayList<UserObj> resultuserList = new ArrayList<UserObj>();    private String cusrrentUserID;*/    private EditText name;    private ListView listView;    private Button btnsearch;    private ArrayList<User> userslist = new ArrayList<User>();    private ArrayList<User> userssearched = new ArrayList<User>();    private ArrayList<String> uids= new ArrayList<>();    private ArrayList<String> uid= new ArrayList<>();    private String namestr;    private User userclicked = new User();    private Boolean isSearched = false;    private FirebaseDatabase db=null;    private FirebaseAuth auth = null;    private DatabaseReference ref=null;    private String picpath="gs://fproject-bdf8a.appspot.com";    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_users_list);        name = findViewById(R.id.editserch);        listView = findViewById(R.id.rvUsers);        btnsearch = findViewById(R.id.btnserch);        db = FirebaseDatabase.getInstance();        ref=db.getReference("Users");       // FirebaseDatabase dbusers = FirebaseDatabase.getInstance();       // DatabaseReference dbrefusers = dbusers.getReference().child("Users");        ref.addListenerForSingleValueEvent(new ValueEventListener() {            @Override            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                for (DataSnapshot data : dataSnapshot.getChildren())                {                    User uu = data.getValue(User.class);                    userslist.add(uu);                    uid.add(data.getKey());                }            }            @Override            public void onCancelled(@NonNull DatabaseError databaseError) {            }        });        final UsersListAdapter adapter = new UsersListAdapter(this, userslist,picpath);        listView.setAdapter(adapter);        btnsearch.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                isSearched = true;                namestr = name.getText().toString();                if (namestr.equals(""))                    Toast.makeText(UsersListActivity.this, "Choose name or username", Toast.LENGTH_SHORT).show();                else {                    for (int i = 0; i < userslist.size(); i++) {                        String fname = userslist.get(i).getName();                        //String lname = userslist.get(i).getLName();                        String username = userslist.get(i).getEmail();                        if (fname.equals(namestr) ||/* lname.equals(namestr) ||*/ username.equals(namestr))                        {                            userssearched.add(userslist.get(i));                            uids.add(uid.get(i));                        }                    }                    if (userssearched.size() == 0)                        Toast.makeText(UsersListActivity.this, "There are no users in this name", Toast.LENGTH_SHORT).show();                    else {                        UsersListAdapter adapter3 = new UsersListAdapter(UsersListActivity.this, userssearched, picpath);                        listView.setAdapter(null);                        listView.setAdapter(adapter3);}                }            }        });        checkUserOrAdmin();    }    private void checkUserOrAdmin() {        MyFireBase_RTDB.checkIfAdmin(new MyFireBase_RTDB.CallBack_DataIsReady() {            @Override            public void getResult(Boolean data) {                isUser = !data;                refreshMenu();            }        });    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        MenuInflater inflater = getMenuInflater();        if(isUser)            inflater.inflate(R.menu.menu_user, menu);        else            inflater.inflate(R.menu.menu, menu);        return true;    }    public  void refreshMenu()    {        invalidateOptionsMenu();    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        switch (item.getItemId()) {            case R.id.item2:                Toast.makeText(this, "My Profile", Toast.LENGTH_SHORT).show();                Intent it =new Intent(UsersListActivity.this, ShowUserActivity.class);                startActivity(it);                return true;            case R.id.item3:                Toast.makeText(this, "Food List", Toast.LENGTH_SHORT).show();                Intent it2 =new Intent(UsersListActivity.this,FoodListActivity.class);                startActivity(it2);                return true;            case R.id.item4:                Toast.makeText(this, "Add Food", Toast.LENGTH_SHORT).show();                Intent it3 =new Intent(UsersListActivity.this,AddFood.class);                startActivity(it3);                return true;            case R.id.item5:                Toast.makeText(this, "Users List", Toast.LENGTH_SHORT).show();                Intent it4 =new Intent(UsersListActivity.this,UsersListActivity.class);                startActivity(it4);                return true;            case R.id.item6:                Toast.makeText(this, "Distribution List", Toast.LENGTH_SHORT).show();                Intent it5 =new Intent(UsersListActivity.this,DistributionListActivity.class);                startActivity(it5);                return true;            case R.id.item7:                Toast.makeText(this, "Add Distribution", Toast.LENGTH_SHORT).show();                Intent it6 =new Intent(UsersListActivity.this,AddDiscrabution.class);                startActivity(it6);                return true;            case R.id.item8:                Toast.makeText(this, "Add Collecting Point", Toast.LENGTH_SHORT).show();                Intent it7 =new Intent(UsersListActivity.this,AddCollectingPoint.class);                startActivity(it7);                return true;            case R.id.item9:                Toast.makeText(this, "Collecting Point List", Toast.LENGTH_SHORT).show();                Intent it8 =new Intent(UsersListActivity.this,CollectingPointListActivity.class);                startActivity(it8);                return true;            default:                return super.onOptionsItemSelected(item);        }    }}